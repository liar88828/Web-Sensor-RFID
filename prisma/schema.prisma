// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  //
  no_hp         String    @unique
  alamat        String
  //
  accounts      Account[]
  sessions      Session[]
  //
  role          String
  password      String?
  otp           Int?
  expiresOtp    DateTime?
  Anggota       Anggota?

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Anggota {
  id        String   @id @default(uuid())
  hewan     String   @db.VarChar(100)
  warna     String   @db.VarChar(10)
  id_sensor Sensor[]
  id_user   String   @unique
  user      User     @relation(fields: [id_user], references: [id])
}

model Sensor {
  id         String   @id @default(uuid())
  rfid       String   @db.VarChar(20)
  kode       String   @db.VarChar(10)
  status     String   @default("Invalid") @db.VarChar(10)
  warna      String   @db.VarChar(10)
  Anggota    Anggota? @relation(fields: [id_anggota], references: [id])
  id_anggota String?
  id_record  Record[]
}

model Record {
  id        String   @id @default(uuid())
  tanggal   DateTime @db.Date
  jamMasuk  DateTime @db.Time()
  lokasi    String
  Sensor    Sensor?  @relation(fields: [id_sensor], references: [id])
  id_sensor String?
}
